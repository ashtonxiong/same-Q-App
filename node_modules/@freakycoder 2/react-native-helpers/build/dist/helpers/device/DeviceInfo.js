import { Platform, Dimensions, NativeModules } from "react-native";
// i.e: en_US
const getDeviceLanguage = Platform.OS === "ios"
    ? NativeModules.SettingsManager.settings.AppleLocale ||
        NativeModules.SettingsManager.settings.AppleLanguages[0] //iOS 13
    : NativeModules.I18nManager.localeIdentifier;
// ? Screen Constants
const Screen = Dimensions.get("screen");
const ScreenWidth = Screen.width;
const ScreenHeight = Screen.height;
const ScreenScale = Screen.scale;
const ScreenFontScale = Screen.fontScale;
// ? Window Constants
const Window = Dimensions.get("window");
const WindowWidth = Window.width;
const WindowHeight = Window.height;
const WindowFontScale = Window.fontScale;
const WindowScale = Window.scale;
const isIOS = Platform.OS === "ios";
const isAndroid = Platform.OS === "android";
const PlatformVersion = Platform.Version;
/**
 * @description
 * These are the dynamic calculation for the app is on the landscape or portrait mode.
 */
const ScreenMin = Math.min(WindowWidth, WindowHeight) || WindowHeight;
const ScreenMax = Math.max(WindowWidth, WindowHeight) || WindowWidth;
/**
 * @description
 * These are the viewport units for the web or mobile web who wants to use viewport units.
 */
const vh = WindowHeight / 100;
const vw = WindowWidth / 100;
const vmin = Math.min(vh, vw) || vh;
const vmax = Math.max(vh, vw) || vw;
export { vh, vw, vmin, vmax, ScreenMin, ScreenMax, isIOS, isAndroid, ScreenWidth, ScreenHeight, ScreenScale, ScreenFontScale, WindowWidth, WindowHeight, WindowScale, WindowFontScale, PlatformVersion, getDeviceLanguage, };
//# sourceMappingURL=DeviceInfo.js.map